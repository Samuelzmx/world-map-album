<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./jsconfig.json

{
  "compilerOptions": {
    "paths": {
      "@/*": ["./src/*"]
    }
  }
}

<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./tailwind.config.js

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic':
          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
      },
    },
  },
  plugins: [],
}

<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./next.config.js

/** @type {import('next').NextConfig} */
const nextConfig = {}

module.exports = nextConfig

<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./package.json

{
  "name": "my-travel-map",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "leaflet": "^1.9.4",
    "next": "14.0.4",
    "react": "^18",
    "react-dom": "^18",
    "react-leaflet": "^4.2.1"
  },
  "devDependencies": {
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "14.0.4",
    "postcss": "^8",
    "tailwindcss": "^3.3.0"
  }
}

<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./postcss.config.js

module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/app/layout.js

import "./globals.css";
import { Inter } from "next/font/google";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: " World Album",
  description: "Precious travel memories~",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body>
        <div>
          {children}
        </div>
      </body>
    </html>
  );
}
<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/app/homepage.module.css


<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/app/page.js

import Link from "next/link";
import styles from "./homepage.module.css";

export default function Home() {
  return (
    <div>
      <div className={styles.content}>
        <Link href="/map">
          Display Map
        </Link>
      </div>
    </div>
  );
}

<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/app/globals.css

:root {
  --bg: white;
  --textColor: black;
  --softBg: #f0f0f0;
  --softTextColor: #626262;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  max-width: 100vw;
  overflow-x: hidden;
}

a {
  color: inherit;
  text-decoration: none;
}

.dark {
  --bg: #0f172a;
  --textColor: #ddd;
  --softBg: #1f273a;
  --softTextColor: #a6a6a6;
}

.light {
  --bg: white;
  --textColor: black;
  --softBg: #f0f0f0;
  --softTextColor: #626262;
}

.container {
  min-height: 100vh;
  background-color: var(--bg);
  color: var(--textColor);
}

.wrapper {
  max-width: 1536px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 80px;
  padding-right: 80px;
}

@media screen and (max-width: 1536px) {
  .wrapper {
    max-width: 1366px;
  }
}
@media screen and (max-width: 1280px) {
  .wrapper {
    max-width: 1024px;
  }
}
@media screen and (max-width: 1024px) {
  .wrapper {
    max-width: 768px;
    padding-left: 40px;
    padding-right: 40px;
  }
}
@media screen and (max-width: 768px) {
  .wrapper {
    max-width: 640px;
  }
}
@media screen and (max-width: 640px) {
  .wrapper {
    max-width: 475px;
  }
}

.ql-container{
  font-size: 28px !important;
}

.quill > .ql-container > .ql-editor.ql-blank::before{
  color: #b3b3b1;
}
<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/app/map/page.jsx

"use client"
// src/app/map/page.jsx
import dynamic from 'next/dynamic';
import React from 'react';

const DynamicMapComponent = dynamic(
  () => import('@/components/MapComponent/MapComponent'), 
  { ssr: false } // 禁止服务器端渲染
);

export default function HomePage() {
  return (
    <div>
      <DynamicMapComponent />
    </div>
  );
}


<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/app/map/map.module.css


<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/components/MapComponent/MapComponent.jsx

// src/components/MapComponent/MapComponent.jsx
import React, { useEffect, useState } from 'react';
import L from 'leaflet';
import { MapContainer, TileLayer } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';

const MapComponent = () => {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true); // 当组件挂载在客户端时设置为 true
  }, []);

  if (!isClient) {
    return null; // 在服务器端渲染时不渲染组件
  }

  const position = [38, -95.00]; // 美国的大致中心点坐标

  return (
    <MapContainer center={position} zoom={5} style={{ height: '100vh', width: '100%' }}>
      <TileLayer
        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
      />
      {/* 其他地图相关的组件 */}
    </MapContainer>
  );
};

export default MapComponent;
<<<<<<<<<<FILE END>>>>>>>>>>


<<<<<<<<<<FILE START>>>>>>>>>>
File Path: ./src/components/MapComponent/MapComponent.module.css


<<<<<<<<<<FILE END>>>>>>>>>>


